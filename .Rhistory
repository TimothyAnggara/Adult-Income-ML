---
title: "Adult Income"
library(readr)
library(dplyr)
library(httr)
install.packages("dplyr")
install.packages("dplyr")
library(readr)
library(dplyr)
library(httr)
library(readr)
library(dplyr)
library(httr)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data"
temp_file <- tempfile()
GET(url, write_disk(temp_file))
column_names <- c("age", "workclass", "fnlwgt", "education", "education_num",
"marital_status", "occupation", "relationship", "race",
"sex", "capital_gain", "capital_loss", "hours_per_week",
"native_country", "income")
adult_data <- read_csv(temp_file, col_names = column_names, na = "?")
unlink(temp_file)
head(adult_data)
url <- "https://archive.ics.uci.edu/ml/machine-learning-databases/adult/adult.data"
temp_file <- tempfile()
download.file(url, temp_file)
column_names <- c("age", "workclass", "fnlwgt", "education", "education_num",
"marital_status", "occupation", "relationship", "race",
"sex", "capital_gain", "capital_loss", "hours_per_week",
"native_country", "income")
adult_data <- read_csv(temp_file, col_names = column_names, na = "?")
unlink(temp_file)
original_size <- nrow(adult_data)
adult_data_clean <- adult_data %>%
drop_na()
adult_data_clean <- adult_data %>%
drop_na()
adult_data_clean <- adult_data %>%
drop_na()
library(readr)
library(dplyr)
library(httr)
adult_data_clean <- adult_data %>%
drop_na()
adult_data_clean <- na.omit(adult_data)
new_size <- nrow(adult_data_clean)
adult_data_clean <- adult_data_clean %>%
select(-fnlwgt)
columns_to_factor <- c("workclass", "education", "marital_status", "occupation",
"relationship", "race", "sex", "native_country", "income")
adult_data_clean <- adult_data_clean %>%
mutate(across(all_of(columns_to_factor), as.factor))
str(adult_data_clean)
# Print the size comparison
cat("Original size of the dataset:", original_size, "\n")
cat("Size of the dataset after dropping rows with NA values:", new_size, "\n")
# Print the size comparison
cat("Original size of the dataset:", original_size, "\n")
str(adult_data_clean)
library(ggplot2)
ggplot(adult_income, aes(x = occupation, fill = income)) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Chart of Income by Occupation",
x = "Occupation",
y = "Count",
fill = "Income") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
ggplot(adult_data_clean, aes(x = occupation, fill = income)) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Chart of Income by Occupation",
x = "Occupation",
y = "Count",
fill = "Income") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
ggplot(adult_data_clean, aes(x = workclass, fill = income)) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Chart of Income by Workclass",
x = "Occupation",
y = "Count",
fill = "Income") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
ggplot(adult_data_clean, aes(x = sex, fill = income)) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Chart of Income by Sex",
x = "Occupation",
y = "Count",
fill = "Income") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
prop_data <- adult_data_clean %>%
group_by(sex, income) %>%
summarise(count = n()) %>%
mutate(proportion = count / sum(count)) %>%
ungroup()
prop_data <- adult_data_clean %>%
group_by(sex, income) %>%
summarise(count = n()) %>%
mutate(proportion = count / sum(count)) %>%
ungroup()
prop_data
prop_occupation_data <- adult_data_clean %>%
group_by(sex, income) %>%
summarise(count = n()) %>%
mutate(proportion = count / sum(count)) %>%
ungroup()
prop_occupation_data
prop_occupation_data <- adult_data_clean %>%
group_by(sex, income) %>%
summarise(count = n()) %>%
mutate(proportion = count / sum(count)) %>%
ungroup()
prop_occupation_data
prop_occupation_data <- adult_data_clean %>%
group_by(occupation, income) %>%
summarise(count = n()) %>%
mutate(proportion = count / sum(count)) %>%
ungroup()
prop_occupation_data
prop_workclass_data <- adult_data_clean %>%
group_by(workclass, income) %>%
summarise(count = n()) %>%
mutate(proportion = count / sum(count)) %>%
ungroup()
prop_workclass_data
ggplot(adult_data_clean, aes(x = race, fill = income)) +
geom_bar(position = "stack") +
labs(title = "Stacked Bar Chart of Income by Race",
x = "Occupation",
y = "Count",
fill = "Income") +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
prop_race_data <- adult_data_clean %>%
group_by(race, income) %>%
summarise(count = n()) %>%
mutate(proportion = count / sum(count)) %>%
ungroup()
prop_race_data
contingency_table <- table(adult_data_clean$sex, adult_data_clean$income)
chi_square_test <- chisq.test(contingency_table)
print(chi_square_test)
contingency_table <- table(adult_data_clean$race, adult_data_clean$income)
chi_square_test <- chisq.test(contingency_table)
print(chi_square_test)
contingency_table <- table(adult_data_clean$sex, adult_data_clean$income)
chi_square_test <- chisq.test(contingency_table)
print(chi_square_test)
contingency_table <- table(adult_data_clean$occupation, adult_data_clean$income)
chi_square_test <- chisq.test(contingency_table)
print(chi_square_test)
library(emmeans)
install.packages("emmeans")
